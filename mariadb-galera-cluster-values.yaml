
global:
  imageRegistry: ""

  imagePullSecrets: []
  storageClass: ""

kubeVersion: ""

nameOverride: ""

fullnameOverride: ""

namespaceOverride: ""

commonAnnotations: {}

commonLabels: {}

schedulerName: ""

clusterDomain: cluster.local

extraDeploy: []


diagnosticMode:

  enabled: false

  command:
    - sleep

  args:
    - infinity
image:
  registry: docker.io
  repository: bitnami/mariadb-galera
  #tag: 10.6.5-debian-10-r66

  pullPolicy: IfNotPresent

  pullSecrets: []

  debug: false

podManagementPolicy: OrderedReady

hostAliases: []

service:

  type: ClusterIP

  clusterIP: ""

  ports:
    mysql: 3306

  nodePorts:
    mysql: ""

  extraPorts: []

  externalIPs: []

  loadBalancerIP: ""

  loadBalancerSourceRanges: []

  externalTrafficPolicy: Cluster

  annotations: {}

  sessionAffinity: None

  sessionAffinityConfig: {}

  headless:

    annotations: {}

    publishNotReadyAddresses: true

serviceAccount:
  create: false
  name: ""
  automountServiceAccountToken: false
  annotations: {}

command: []

args: []

extraEnvVars: []

extraEnvVarsCM: ""

extraEnvVarsSecret: ""

rbac:

  create: false

podSecurityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001

containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true

rootUser:

  user: root

  password: "PASSWORD"

  forcePassword: false

existingSecret: ""

usePasswordFiles: false

customPasswordFiles: {}

db:

  user: "confluence"

  password: "PASSWORD"

  name: confluence

  forcePassword: false

galera:
 
  name: galera

  bootstrap:
  
    forceBootstrap: true
 
    bootstrapFromNode: 0

    forceSafeToBootstrap: false

  mariabackup:
 
    user: mariabackup
   
    password: "PASSWORD"
   
    forcePassword: false

ldap:
  enabled: false
  uri: ""
  base: ""
  binddn: ""
  bindpw: ""
  bslookup: ""
  filter: ""
  map: ""
  nss_initgroups_ignoreusers: root,nslcd
  scope: ""
  tls_reqcert: ""

tls:
 
  enabled: false

  autoGenerated: false
 
  certificatesSecret: ""

  certFilename: ""

  certKeyFilename: ""

  certCAFilename: ""

mariadbConfiguration: |-
  [client]
  port=3306
  socket=/opt/bitnami/mariadb/tmp/mysql.sock
  plugin_dir=/opt/bitnami/mariadb/plugin

  [mysqld]
  default_storage_engine=InnoDB
  basedir=/opt/bitnami/mariadb
  datadir=/bitnami/mariadb/data
  plugin_dir=/opt/bitnami/mariadb/plugin
  tmpdir=/opt/bitnami/mariadb/tmp
  socket=/opt/bitnami/mariadb/tmp/mysql.sock
  pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
  bind_address=0.0.0.0

  ## Character set
  ##
  collation_server=utf8mb4_bin
  init_connect='SET NAMES utf8mb4 COLLATE utf8mb4_bin'
  character_set_server=utf8mb4

  ## MyISAM
  ##
  key_buffer_size=128M
  myisam_recover_options=FORCE,BACKUP

  ## Safety
  ##
  skip_host_cache
  skip_name_resolve
  max_allowed_packet=1024M
  max_connect_errors=1000000
  sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,ONLY_FULL_GROUP_BY
  sysdate_is_now=1

  ## Binary Logging
  ##
  log_bin=mysql-bin
  expire_logs_days=14
  # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
  sync_binlog=0
  # Required for Galera
  binlog_format=row

  ## Caches and Limits
  ##
  tmp_table_size=32M
  max_heap_table_size=32M
  # Re-enabling as now works with Maria 10.1.2
  query_cache_type=1
  query_cache_limit=64M
  query_cache_size=256M
  max_connections=1000
  thread_cache_size=50
  open_files_limit=65535
  table_definition_cache=4096
  table_open_cache=4096

  ## InnoDB
  ##
  innodb=FORCE
  innodb_strict_mode=1
  # Mandatory per https://github.com/codership/documentation/issues/25
  innodb_autoinc_lock_mode=2
  # Per https://www.percona.com/blog/2006/08/04/innodb-double-write/
  innodb_doublewrite=1
  innodb_flush_method=O_DIRECT
  innodb_log_files_in_group=2
  innodb_log_file_size=512M
  innodb_flush_log_at_trx_commit=1
  innodb_file_per_table=1
  # 80% Memory is default reco.
  # Need to re-evaluate when DB size grows
  innodb_buffer_pool_size=2G
  innodb_file_format=Barracuda
  ######## Daniel war hier############
  transaction-isolation=READ-COMMITTED
  ## Logging
  ##
  log_error=/opt/bitnami/mariadb/logs/mysqld.log
  slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
  log_queries_not_using_indexes=1
  slow_query_log=1

  ## SSL
  ## Use extraVolumes and extraVolumeMounts to mount /certs filesystem
  # ssl_ca=/certs/ca.pem
  # ssl_cert=/certs/server-cert.pem
  # ssl_key=/certs/server-key.pem

  [galera]
  wsrep_on=ON
  wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
  wsrep_sst_method=mariabackup
  wsrep_slave_threads=4
  wsrep_cluster_address=gcomm://
  wsrep_cluster_name=galera
  wsrep_sst_auth="root:"
  # Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit
  innodb_flush_log_at_trx_commit=2
  # MYISAM REPLICATION SUPPORT #
  wsrep_replicate_myisam=ON

  [mariadb]
  plugin_load_add=auth_pam

  ## Data-at-Rest Encryption
  ## Use extraVolumes and extraVolumeMounts to mount /encryption filesystem
  # plugin_load_add=file_key_management
  # file_key_management_filename=/encryption/keyfile.enc
  # file_key_management_filekey=FILE:/encryption/keyfile.key
  # file_key_management_encryption_algorithm=AES_CTR
  # encrypt_binlog=ON
  # encrypt_tmp_files=ON

  ## InnoDB/XtraDB Encryption
  # innodb_encrypt_tables=ON
  # innodb_encrypt_temporary_tables=ON
  # innodb_encrypt_log=ON
  # innodb_encryption_threads=4
  # innodb_encryption_rotate_key_age=1

  ## Aria Encryption
  # aria_encrypt_tables=ON
  # encrypt_tmp_disk_tables=ON

configurationConfigMap: ""

initdbScripts: {}

initdbScriptsConfigMap: ""

extraFlags: ""

replicaCount: 3

updateStrategy:
  type: RollingUpdate

podLabels: {}

podAnnotations: {}

podAffinityPreset: ""

podAntiAffinityPreset: soft

nodeAffinityPreset:
 
  type: ""

  key: ""

  values: []

affinity: {}

nodeSelector: {}

tolerations: []

topologySpreadConstraints: []

lifecycleHooks: {}

containerPorts:
  mysql: 3306
  galera: 4567
  ist: 4568
  sst: 4444

persistence:

  enabled: true

  existingClaim: ""

  subPath: ""
  
  mountPath: /bitnami/mariadb

  selector: {}

  storageClass: ""

  annotations: {}

  labels: {}

  accessModes:
    - ReadWriteOnce

  size: 35Gi

priorityClassName: ""

initContainers: []

sidecars: []

extraVolumes: []

extraVolumeMounts: []

resources:
   limits:
      cpu: 2
      memory: 2048Mi
   requests:
      cpu: 1.0
      memory: 1024Mi

livenessProbe:
  enabled: true

  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

startupProbe:
  enabled: false

  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1

  failureThreshold: 48

customStartupProbe: {}

customLivenessProbe: {}

customReadinessProbe: {}

podDisruptionBudget:

  create: false

  minAvailable: 1

  maxUnavailable: ""

metrics:

  enabled: false

  image:
    registry: docker.io
    repository: bitnami/mysqld-exporter
    tag: 0.14.0-debian-11-r3
    pullPolicy: IfNotPresent

    pullSecrets: []

  extraFlags: []

  resources:
    limits:
        cpu: 2
        memory: 2048Mi
    requests:
        cpu: 1
        memory: 1024Mi

  service:
    type: ClusterIP
    port: 9104
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9104"

    loadBalancerIP: ""

    clusterIP: ""

    loadBalancerSourceRanges: []

    externalTrafficPolicy: Cluster


  serviceMonitor:

    enabled: false

    namespace: ""
 
    jobLabel: ""

    interval: ""

    scrapeTimeout: ""

    selector:
      prometheus: kube-prometheus

    relabelings: []

    metricRelabelings: []

    honorLabels: false

    labels: {}

  prometheusRules:
    enabled: false
    additionalLabels:
      app: prometheus-operator
      release: prometheus

    rules: {}
